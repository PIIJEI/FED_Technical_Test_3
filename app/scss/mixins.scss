/* Box-Sizing */
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

/* backimage */
@mixin backImage($bg_image, $overlay_opacity: "", $overlay_color: "") {

  background: -webkit-linear-gradient(left, rgba($overlay_color, $overlay_opacity), rgba($overlay_color, $overlay_opacity)), url($bg_image) no-repeat;
  background: -moz-linear-gradient(left, rgba($overlay_color, $overlay_opacity), rgba($overlay_color, $overlay_opacity)), url($bg_image) no-repeat;
  background: -o-linear-gradient(left, rgba($overlay_color, $overlay_opacity), rgba($overlay_color, $overlay_opacity)), url($bg_image) no-repeat;
  background: -ms-linear-gradient(left, rgba($overlay_color, $overlay_opacity), rgba($overlay_color, $overlay_opacity)), url($bg_image) no-repeat;

}

/* CLEARFIX */
@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  } //before, after
  &:after {
    clear: both;
  } //after
} //clearfix

/*********************
BREAKPOINTS
*********************/

 @mixin breakpoint($point) {
   @if $point == desktop {
     @media (min-width: 70em) { @content ; }
  }
   @else if $point == laptop {
     @media (max-width: 70em) { @content ; }
  }
    @else if $point == tablet {
     @media (max-width: 64em) { @content ; }
  }
   @else if $point == phablet {
     @media (min-width: 40em)  { @content ; }
  }
  @else if $point == mobileonly {
     @media (max-width: 40em)  { @content ; }

  }
}


/*************** 
FUNCTION ( CONVERTER 'PX' TO 'EM' )
****************/

/*  
HOW TO USE

-

    h1 {
      font-size: em(32);
    }

    // is the same as:

    h1 {
      font-size: em(32px);
    }

*/

//un-modified
$browser-context: 16;

@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1em;
}